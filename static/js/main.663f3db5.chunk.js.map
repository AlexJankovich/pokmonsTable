{"version":3,"sources":["components/MainPage/MainPage.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","API/api.ts","Redux/AppReducer.ts","Redux/PokemonsReducer.ts","Redux/CardReducer.ts","Common/routes.ts","components/PokemonCard/PokemonCard.tsx","components/MainPage/MainPage.tsx","Redux/PokemonReducer.ts","Redux/SearchReducer.ts","components/Pokemon/PokemonSearch.tsx","components/Pokemon/Pokemon.tsx","components/NavBar/NavBar.tsx","components/Header/Header.tsx","Common/Preloader.tsx","Common/Error404Page.tsx","components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","Redux/Store.ts","index.tsx","components/Pokemon/Pokemon.module.css","components/NavBar/NavBar.module.css","components/Pokemon/PokemonSearch.module.css"],"names":["module","exports","instance","axios","create","baseURL","PokeApi","pageSize","page","offset","get","then","res","console","log","status","name","AppInitialState","isFetching","pokemonIsFetching","Error","isInitialise","ToggleIsFetching","type","SetError","error","PokemonInitialState","count","results","url","img","id","currentPage","SetPokemonsData","Data","GetPokemons","dispatch","getState","pokemons","response","data","catch","e","message","finally","cardInitialState","routes","routeLinks","PokemonCard","props","useDispatch","Pokemon","useSelector","state","card","useEffect","ImgUrl","findIndex","i","to","style","width","margin","title","cover","src","alt","loading","bordered","hoverable","size","MainPage","Pokemons","PokemonsArr","map","index","className","s","pokemonsWrapper","gutter","xs","sm","md","lg","justify","total","showSizeChanger","showQuickJumper","onChange","SetCurrentPage","defaultPageSize","current","responsive","base_experience","height","is_default","order","weight","abilities","is_hidden","slot","ability","forms","game_indices","game_index","version","held_items","item","version_details","rarity","location_area_encounters","moves","move","version_group_details","level_learned_at","version_group","move_learn_method","species","sprites","back_female","back_shiny_female","back_default","front_female","front_shiny_female","back_shiny","front_default","front_shiny","other","dream_world","versions","yellow","crystal","gold","silver","emerald","platinum","icons","stats","base_stat","effort","stat","types","initialState","names","onChangeName","SetOnChangeName","value","PokemonSearch","pokemonList","search","pokemonCount","useState","showPokemonList","setShowPokemonList","showSearchWindow","showList","pokemonRenderList","filter","substr","length","onClick","textAlign","inputWrapper","currentTarget","listWrapper","useParams","pokemon","GetPokemon","pokemonWrapper","searchWrapper","pokemonContentWrapper","skillStyleWrapper","skillStyle","padding","NavBar","useLocation","navBarWrapper","pathname","links","active","Header","headerWrapper","antIcon","LoadingOutlined","fontSize","spin","Preloader","position","left","top","right","bottom","indicator","Error404","NativeFooter","App","appProps","app","initialized","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","actions","action","AppState","createStore","applyMiddleware","thunk","window","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.663f3db5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonsWrapper\":\"MainPage_pokemonsWrapper__1JR-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__3cRpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Footer_headerWrapper__20kLp\"};","import axios from 'axios'\r\n\r\nexport const instance = axios.create({baseURL: 'https://pokeapi.co/api/v2/'})\r\n\r\nexport const PokeApi = {\r\n\r\n    PokesGet: ( pageSize:number, page:number) => {\r\n        const offset=pageSize*(page-1)\r\n        return instance.get(`pokemon/?limit=${pageSize}&offset=${offset}`).then(res => {\r\n            console.log(res.status)\r\n            return res\r\n        })\r\n    },\r\n\r\n    PokemonGet:(name:string)=>{\r\n        return instance.get(`pokemon/${name}`).then(res=> {\r\n            return res\r\n        })\r\n\r\n    }\r\n}","import { Action } from \"redux\"\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { GetPokemons } from \"./PokemonsReducer\"\r\nimport {AppStateType} from \"./Store\";\r\n\r\nconst AppInitialState = {\r\n    isFetching: false,\r\n    pokemonIsFetching: false,\r\n    Error: '',\r\n    isInitialise:false\r\n}\r\n\r\nexport type AppInitialStateType = typeof AppInitialState\r\n\r\nexport const AppReducer = (state: AppInitialStateType = AppInitialState, action: AppActionTypes) => {\r\n    switch (action.type) {\r\n        case \"APP/TOGGLE-IS-FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"APP/POKEMON-TOGGLE-IS-FETCHING\": {\r\n            return {...state, isFetching: action.pokemonIsFetching}\r\n        }\r\n        case \"APP/SET-ERROR\": {\r\n            return {...state, Error: action.error}\r\n        }\r\n        case \"APP/SET-INITIALIZED\":{\r\n            return {...state,isInitialise:action.initialized}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\n\r\nexport const ToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'APP/TOGGLE-IS-FETCHING', isFetching\r\n    } as const\r\n}\r\n\r\nexport const PokemonToggleIsFetching = (pokemonIsFetching: boolean) => {\r\n    return {\r\n        type: 'APP/POKEMON-TOGGLE-IS-FETCHING', pokemonIsFetching\r\n    } as const\r\n}\r\n\r\nexport const SetError = (error: string) => {\r\n    return {\r\n        type: 'APP/SET-ERROR', error\r\n    } as const\r\n}\r\n\r\nexport const setInitializeSuccess = (initialized:boolean) => ({\r\n    type: 'APP/SET-INITIALIZED', initialized\r\n} as const)\r\n\r\n//thunk\r\n\r\nexport const InitializeApp = (): ThunkAction<void, AppStateType, unknown, Action<string>> => (dispatch,getState) => {\r\n    let promise = dispatch(GetPokemons(getState().pokemons.pageSize, getState().pokemons.currentPage))\r\n    promise.then(()=>\r\n        dispatch(setInitializeSuccess(true))\r\n    )\r\n}\r\n\r\n//Actions types\r\n\r\ntype setInitializeType = ReturnType<typeof setInitializeSuccess>\r\nexport type ToggleIsFetchingType = ReturnType<typeof ToggleIsFetching>\r\nexport type PokemonToggleIsFetchingType = ReturnType<typeof PokemonToggleIsFetching>\r\nexport type SetErrorType = ReturnType<typeof SetError>\r\n\r\nexport type AppActionTypes = ToggleIsFetchingType | SetErrorType | PokemonToggleIsFetchingType | setInitializeType","import {ThunkAction} from \"redux-thunk\";\r\nimport {PokeApi} from \"../API/api\";\r\nimport {AppActionTypes, SetError, ToggleIsFetching} from \"./AppReducer\";\r\nimport {PokemonStateType} from \"./PokemonReducer\";\r\nimport {AppStateType} from \"./Store\";\r\n\r\nexport type PokemonsResultsType = {\r\n    name: string\r\n    url: string\r\n    img?: string\r\n    id?: number\r\n}\r\n\r\nconst PokemonInitialState = {\r\n    count: 1,\r\n    results: [\r\n        {\r\n            name: '',\r\n            url: '',\r\n            img: '',\r\n            id: 0\r\n        }\r\n    ],\r\n    currentPage: 1,\r\n    pageSize: 10\r\n}\r\n\r\nexport type PokemonInitialStateType = typeof PokemonInitialState\r\n\r\nexport const PokemonsReducers = (state: PokemonInitialStateType = PokemonInitialState, actions: PokemonsActionTypes): PokemonInitialStateType => {\r\n    switch (actions.type) {\r\n        case \"POKEMONS/SET-POKEMONS-DATA\": {\r\n            return {\r\n                ...state,\r\n                count: actions.Data.count,\r\n                results: actions.Data.results\r\n            }\r\n        }\r\n        case \"POKEMONS/SET-POKEMONS-IMG-DATA\": {\r\n            return {\r\n                ...state, results: state.results.map((i) => {\r\n                    if (i.name && i.name === actions.Data.name) {\r\n                        i = {\r\n                            ...i,\r\n                            id: actions.Data.id,\r\n                            img: actions.Data.sprites.other[\"official-artwork\"].front_default\r\n                        }\r\n                    } else {\r\n                        i = {...i}\r\n                    }\r\n                    return i\r\n                })\r\n            }\r\n        }\r\n        case \"POKEMONS/SET-PAGE-SIZE\": {\r\n            return {...state, pageSize: actions.size}\r\n        }\r\n        case 'POKEMONS/SET-CURRENT-SIZE': {\r\n            return {...state, currentPage: actions.page}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetPokemonsData = (Data: PokemonInitialStateType) => {\r\n    return {\r\n        type: 'POKEMONS/SET-POKEMONS-DATA', Data\r\n    } as const\r\n}\r\nexport const SetPokemonsImgData = (Data: PokemonStateType,) => {\r\n    return {\r\n        type: 'POKEMONS/SET-POKEMONS-IMG-DATA', Data\r\n    } as const\r\n}\r\nexport const SetPageSize = (size: number) => {\r\n    return {\r\n        type: 'POKEMONS/SET-PAGE-SIZE', size\r\n    } as const\r\n}\r\nexport const SetCurrentPage = (page: number) => {\r\n    return {\r\n        type: 'POKEMONS/SET-CURRENT-SIZE', page\r\n    } as const\r\n}\r\n\r\n//Actions creators\r\n\r\ntype SetPokemonsDataType = ReturnType<typeof SetPokemonsData>\r\ntype SetPokemonsImgDataType = ReturnType<typeof SetPokemonsImgData>\r\ntype SetPageSizeType = ReturnType<typeof SetPageSize>\r\ntype SetCurrentPageType = ReturnType<typeof SetCurrentPage>\r\n\r\n// Types of Actions creators\r\n\r\ntype PokemonsActionTypes =\r\n    SetPokemonsDataType\r\n    | SetPokemonsImgDataType\r\n    | SetPageSizeType\r\n    | SetCurrentPageType\r\n //Thunks\r\nexport const GetPokemons = (pageSize: number=20, currentPage: number): ThunkAction<any, AppStateType, unknown, DispatchType> => {\r\n    return (dispatch, getState) => {\r\n        return PokeApi.PokesGet(pageSize || getState().pokemons.pageSize,\r\n            currentPage || getState().pokemons.currentPage).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(SetPokemonsData(response.data))\r\n            }\r\n        })\r\n            .catch(e => {\r\n                dispatch(SetError(e.message))\r\n            })\r\n            .finally(() => dispatch(ToggleIsFetching(false)))\r\n    }\r\n}\r\n\r\n\r\ntype DispatchType = PokemonsActionTypes | AppActionTypes","import {PokemonStateType} from './PokemonReducer'\r\nimport {Dispatch} from 'react';\r\nimport {PokeApi} from '../API/api';\r\n\r\nexport type pokeInfoType = {\r\n    name: string,\r\n    img: string,\r\n    id: number\r\n}\r\n\r\nconst cardInitialState = [\r\n    {\r\n        name: '',\r\n        img: '',\r\n        id: 0\r\n    }\r\n]\r\n\r\nexport type cardInitialStateType = typeof cardInitialState\r\n\r\nexport const CardReducer = (state: cardInitialStateType = cardInitialState, actions: actionsType): cardInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SET-CARD-DATA': {\r\n            if (!actions.Data.name) {\r\n                return state\r\n            } else {\r\n                return [...state, {\r\n                    name: actions.Data.name,\r\n                    img: actions.Data.sprites.other['official-artwork'].front_default,\r\n                    id: actions.Data.id\r\n                }]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetCardData = (Data: PokemonStateType) => {\r\n    return {\r\n        type: 'SET-CARD-DATA', Data\r\n    } as const\r\n}\r\n\r\nexport type SetCardDataType = ReturnType<typeof SetCardData>\r\n\r\nexport type actionsType = SetCardDataType\r\n\r\nexport const GetCardInfo = (name: string) => {\r\n    return (dispatch: Dispatch<any>) => {\r\n        PokeApi.PokemonGet(name).then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(SetCardData(res.data))\r\n            }\r\n        })\r\n    }\r\n}","export const routes = {\r\n    default: `/`,\r\n    mainPage: `/mainPage`,\r\n    pokemon: `/Pokemon/:name?`,\r\n    notfound: '/*',\r\n    error:'/404'\r\n}\r\n\r\nexport const routeLinks ={\r\n    mainPage: '/mainPage',\r\n    defaultPokemon: '/pokemon/1',\r\n    pokemon:'/pokemon/'\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/Store';\r\nimport {Card} from 'antd'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {cardInitialStateType, GetCardInfo} from '../../Redux/CardReducer';\r\nimport {routeLinks} from '../../Common/routes';\r\n\r\ntype PokemonKartType = {\r\n    url: string\r\n    name: string\r\n    index: number\r\n}\r\n\r\nexport const PokemonCard = (props: PokemonKartType) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const Pokemon = useSelector<AppStateType, cardInitialStateType>(state => state.card)\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCardInfo(props.name))\r\n    }, [dispatch, props.name])\r\n\r\n    let ImgUrl = ''\r\n    if (Pokemon[Pokemon.findIndex(i => i.name === props.name)]) {\r\n        ImgUrl = Pokemon[Pokemon.findIndex(i => i.name === props.name)].img\r\n    }\r\n\r\n    return <div>\r\n        <NavLink to={routeLinks.pokemon + props.name}>\r\n            <Card\r\n                style={{width: 250, margin: 10}}\r\n                title={props.name}\r\n                cover={<img src={ImgUrl} alt=\"\"/>}\r\n                loading={ImgUrl === ''}\r\n                type='inner'\r\n                bordered\r\n                hoverable\r\n                size='small'\r\n            />\r\n        </NavLink>\r\n    </div>\r\n\r\n}\r\n","import {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/Store';\r\nimport {GetPokemons, PokemonInitialStateType, SetCurrentPage, SetPageSize} from '../../Redux/PokemonsReducer';\r\nimport React, {useEffect} from 'react';\r\nimport {PokemonCard} from '../PokemonCard/PokemonCard';\r\nimport {Pagination, Row} from 'antd';\r\nimport s from './MainPage.module.css'\r\n\r\nexport const MainPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const Pokemons = useSelector<AppStateType, PokemonInitialStateType>(state => state.pokemons)\r\n\r\n    useEffect(() => {\r\n        dispatch(GetPokemons(Pokemons.pageSize, Pokemons.currentPage))\r\n    }, [dispatch, Pokemons.pageSize, Pokemons.currentPage])\r\n\r\n    const PokemonsArr = Pokemons?.results ? Pokemons.results.map((i, index) => {\r\n        return <div key={i.name}><PokemonCard url={i.url} name={i.name} key={i.name} index={index}/></div>\r\n    }) : null\r\n\r\n    const setPage = (page: number, pageSize?: number) => {\r\n        dispatch(GetPokemons(pageSize, page))\r\n        dispatch(SetPageSize(pageSize || Pokemons.pageSize))\r\n        dispatch(SetCurrentPage(page))\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.pokemonsWrapper}>\r\n            <Row gutter={{xs: 8, sm: 16, md: 24, lg: 32}} justify='center'>\r\n                {PokemonsArr}\r\n            </Row>\r\n        </div>\r\n        <Row justify='center'>\r\n            <Pagination\r\n                total={Pokemons.count}\r\n                showSizeChanger\r\n                showQuickJumper\r\n                onChange={setPage}\r\n                pageSize={Pokemons.pageSize}\r\n                defaultPageSize={10}\r\n                current={Pokemons.currentPage}\r\n                responsive\r\n            />\r\n        </Row>\r\n    </div>\r\n}","import {Dispatch} from \"react\";\r\nimport {PokeApi} from \"../API/api\";\r\nimport {PokemonToggleIsFetching, SetError} from \"./AppReducer\";\r\n\r\nconst PokemonInitialState = {\r\n    id: 0,\r\n    name: '',\r\n    base_experience: 0,\r\n    height: 0,\r\n    is_default: false,\r\n    order: 0,\r\n    weight: 0,\r\n    abilities: [\r\n        {\r\n            is_hidden: false,\r\n            slot: 0,\r\n            ability: {\r\n                name: '',\r\n                url: ''\r\n            }\r\n        }\r\n    ],\r\n    forms: [\r\n        {\r\n            name: '',\r\n            url: ''\r\n        }\r\n    ],\r\n    game_indices: [\r\n        {\r\n            game_index: 0,\r\n            version: {\r\n                name: '',\r\n                url: ''\r\n            }\r\n        }\r\n    ],\r\n    held_items: [\r\n        {\r\n            item: {\r\n                name: '',\r\n                url: ''\r\n            },\r\n            version_details: [\r\n                {\r\n                    rarity: '',\r\n                    version: {\r\n                        name: '',\r\n                        url: ''\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    location_area_encounters: '',\r\n    moves: [\r\n        {\r\n            move: {\r\n                name: '',\r\n                url: ''\r\n            },\r\n            version_group_details: [\r\n                {\r\n                    level_learned_at: 0,\r\n                    version_group: {\r\n                        name: '',\r\n                        url: ''\r\n                    },\r\n                    move_learn_method: {\r\n                        name: '',\r\n                        url: ''\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    species: {\r\n        name: '',\r\n        url: ''\r\n    },\r\n    sprites: {\r\n        back_female: '',\r\n        back_shiny_female: '',\r\n        back_default: 'string',\r\n        front_female: '',\r\n        front_shiny_female: '',\r\n        back_shiny: '',\r\n        front_default: '',\r\n        front_shiny: '',\r\n        other: {\r\n            dream_world: '',\r\n            \"official-artwork\": {front_default: ''}\r\n        },\r\n        versions: {\r\n            \" generation-i\": {\r\n                \"red-blue\": {},\r\n                yellow: {},\r\n            },\r\n            \"generation-ii\": {\r\n                crystal: {},\r\n                gold: {},\r\n                silver: {},\r\n            },\r\n            \"generation-iii\": {\r\n                emerald: {},\r\n                \"firered-leafgreen\": {},\r\n                \"ruby-sapphire\": {},\r\n            },\r\n            \"generation-iv\": {\r\n                \"diamond-pearl\": {},\r\n                \"heartgold-soulsilver\": {},\r\n                platinum: {},\r\n            },\r\n            \"generation-v\": {\r\n                \"black-white\": {},\r\n            },\r\n            \"generation-vi\": {\r\n                \"omegaruby-alphasapphire\": {},\r\n                \"x-y\": {},\r\n            },\r\n            \"generation-vii\": {\r\n                icons: {},\r\n                \"ultra-sun-ultra-moon\": {},\r\n            },\r\n            \"generation-viii\": {\r\n                icons: {},\r\n            }\r\n        }\r\n    },\r\n    stats: [\r\n        {\r\n            base_stat: 0,\r\n            effort: 0,\r\n            stat: {\r\n                name: '',\r\n                url: '',\r\n            }\r\n        }\r\n    ],\r\n    types: [\r\n        {\r\n            slot: 0,\r\n            type: {\r\n                name: '',\r\n                url: '',\r\n            }\r\n        }\r\n    ]\r\n}\r\n\r\nexport type PokemonStateType = typeof PokemonInitialState\r\n\r\nexport const PokemonReducer = (state = PokemonInitialState, actions: PokemonActionTypes): PokemonStateType => {\r\n\r\n    switch (actions.type) {\r\n        case \"POKEMON/SET-POKEMON-DATA\": {\r\n            return {...actions.Data}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const SetPokemonData = (Data: PokemonStateType) => {\r\n    return {\r\n        type: 'POKEMON/SET-POKEMON-DATA', Data\r\n    } as const\r\n}\r\n\r\ntype SetPokemonDataType = ReturnType<typeof SetPokemonData>\r\n\r\ntype PokemonActionTypes = SetPokemonDataType\r\n\r\nexport const GetPokemon = (name: string) => {\r\n    return (dispatch: Dispatch<any>) => {\r\n        PokeApi.PokemonGet(name).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(SetPokemonData(response.data))\r\n            }\r\n        })\r\n            .catch(e => dispatch(SetError(e.message)))\r\n            .finally(() => dispatch(PokemonToggleIsFetching(false)))\r\n    }\r\n}","import {PokemonsResultsType} from './PokemonsReducer';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {AppStateType} from './Store';\r\nimport {PokeApi} from '../API/api';\r\n\r\nconst initialState = {\r\n    names: [\r\n        {name: '',}\r\n    ],\r\n    onChangeName: ''\r\n}\r\n\r\nexport type searchInitialStateType = typeof initialState\r\n\r\nexport const SearchReducer = (state: searchInitialStateType = initialState, action: searchActionsTypes): searchInitialStateType => {\r\n    switch (action.type) {\r\n        case 'SEARCH/SET-NAMES': {\r\n            return {\r\n                ...state,\r\n                names: action.names.map(i => {\r\n                    return {name: i.name}\r\n                })\r\n            }\r\n        }\r\n        case 'SEARCH/SET-ON-CHANGE-NAME':{\r\n            return {\r\n                ...state,\r\n                onChangeName: action.value\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\n\r\nexport const SetNames = (names: PokemonsResultsType[]) => {\r\n    return {\r\n        type: 'SEARCH/SET-NAMES',\r\n        names\r\n    } as const\r\n}\r\n\r\nexport const SetOnChangeName = (value:string) => {\r\n    return {\r\n        type: 'SEARCH/SET-ON-CHANGE-NAME',\r\n        value\r\n    } as const\r\n}\r\n\r\n//action types\r\n\r\nexport type SetNamesType = ReturnType<typeof SetNames>\r\n\r\nexport type SetOnChangeNameType = ReturnType<typeof SetOnChangeName>\r\n\r\ntype searchActionsTypes = SetNamesType | SetOnChangeNameType\r\n\r\n//thunks\r\n\r\nexport const GetAllNames = (count:number): ThunkAction<any, AppStateType, unknown, searchActionsTypes> => {\r\n    return (dispatch) => {\r\n        PokeApi.PokesGet(count, 1).then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(SetNames(res.data.results))\r\n            }\r\n        })\r\n    }\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/Store';\r\nimport {GetAllNames, searchInitialStateType, SetOnChangeName} from '../../Redux/SearchReducer';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {routeLinks} from '../../Common/routes';\r\nimport s from './PokemonSearch.module.css'\r\nimport {Button, Card} from 'antd';\r\n\r\nexport const PokemonSearch = () => {\r\n\r\n    const pokemonList = useSelector<AppStateType, searchInitialStateType>(state => state.search)\r\n\r\n    const pokemonCount = useSelector<AppStateType, number>(state => state.pokemons.count)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [showPokemonList, setShowPokemonList] = useState<boolean>(false)\r\n\r\n    const showSearchWindow = (showList: boolean) => {\r\n        setShowPokemonList(showList)\r\n        dispatch(SetOnChangeName(''))\r\n    }\r\n\r\n    const pokemonSortList = pokemonList.onChangeName === ''\r\n        ? pokemonList.names :\r\n        pokemonList.names.filter(i => i.name.substr(0, pokemonList.onChangeName.length) === pokemonList.onChangeName)\r\n\r\n    const pokemonRenderList = pokemonSortList.map(i => {\r\n        return <div key={i.name}>\r\n            <NavLink\r\n                to={routeLinks.pokemon + i.name}\r\n                onClick={() => showSearchWindow(false)}\r\n            >\r\n                {i.name}\r\n            </NavLink>\r\n        </div>\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetAllNames(pokemonCount))\r\n    }, [dispatch, pokemonCount])\r\n\r\n    const searchHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(SetOnChangeName(e.currentTarget.value))\r\n    }\r\n\r\n    return <>\r\n        <Card style={{textAlign: 'center'}}>\r\n            <h2>Input pokemon name: </h2>\r\n            <div className={s.inputWrapper}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={pokemonList.onChangeName}\r\n                    onChange={searchHandler}\r\n                    onClick={() => showSearchWindow(true)}\r\n                />\r\n            </div>\r\n            {showPokemonList\r\n                ? <>\r\n                    <div className={s.listWrapper}>\r\n                        <>{pokemonRenderList}</>\r\n                    </div>\r\n                    <Button onClick={() => showSearchWindow(false)}>X Close X</Button>\r\n                </>\r\n                : null}\r\n        </Card>\r\n    </>\r\n}","import React, {useEffect} from 'react'\r\nimport {Button, Card, Row} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/Store';\r\nimport {GetPokemon, PokemonStateType} from '../../Redux/PokemonReducer';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {routeLinks} from '../../Common/routes';\r\nimport {PokemonSearch} from './PokemonSearch';\r\nimport s from './Pokemon.module.css'\r\n\r\nexport const Pokemon = () => {\r\n\r\n    let name: { name: string } = useParams()\r\n\r\n    const Pokemon = useSelector<AppStateType, PokemonStateType>(state => state.pokemon)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetPokemon(name.name))\r\n    }, [dispatch, name.name])\r\n\r\n    let ImgUrl = Pokemon.sprites ? Pokemon.sprites.other['official-artwork'].front_default : ''\r\n\r\n    return (\r\n        <div className={s.pokemonWrapper}>\r\n\r\n            <Row justify='center'>\r\n                <div className={s.searchWrapper}>\r\n                    <PokemonSearch/>\r\n                </div>\r\n            </Row>\r\n\r\n            <div>\r\n                <Row justify='center'>\r\n                    <Card\r\n                        style={{textAlign: 'center'}}\r\n                        loading={ImgUrl === ''}\r\n                        title={Pokemon.name}\r\n                        type='inner'\r\n                    >\r\n                        <Row justify='center' className={s.pokemonContentWrapper}>\r\n                            <img src={ImgUrl} alt=\"PokemonIMG\"/>\r\n                            <Row justify='center' gutter={{xs: 4, sm: 10, md: 12, lg: 45}}\r\n                                 className={s.skillStyleWrapper}>\r\n                                <Card title='Abilities' className={s.skillStyle}>\r\n                                    {Pokemon.abilities.map((i, index) => <div key={index}>{i.ability.name}</div>)}\r\n                                </Card>\r\n\r\n                                <Card title='Base experience' className={s.skillStyle}>\r\n                                    {Pokemon.base_experience}\r\n                                </Card>\r\n\r\n                                <Card title='Height' className={s.skillStyle}>\r\n                                    {Pokemon.height}\r\n                                </Card>\r\n\r\n                                <Card title='Weight' className={s.skillStyle}>\r\n                                    {Pokemon.weight}\r\n                                </Card>\r\n\r\n                                <Card title='Type' className={s.skillStyle}>\r\n                                    {Pokemon.types.map(i => <div key={i.type.name}>{i.type.name}</div>)}\r\n                                </Card>\r\n\r\n                                <Card title='Held-items' className={s.skillStyle}>\r\n                                    {Pokemon.held_items.map(i => <div\r\n                                        key={i.item.name}>{i.item.name || 'none'}</div>)}\r\n                                </Card>\r\n\r\n                            </Row>\r\n                        </Row>\r\n\r\n                        <Row justify=\"space-around\" style={{padding: '20px 0'}}>\r\n\r\n                            <Button title='next'>\r\n                                <Link to={routeLinks.pokemon + `${Pokemon.id - 1 === 0 ? 1 : Pokemon.id - 1}`}>\r\n                                    {'<'}\r\n                                </Link>\r\n                            </Button>\r\n\r\n                            <Button title='next'>\r\n                                <Link to={routeLinks.pokemon + (Pokemon.id + 1)}>\r\n                                    {'>'}\r\n                                </Link>\r\n                            </Button>\r\n\r\n                        </Row>\r\n                    </Card>\r\n                </Row>\r\n            </div>\r\n        </div>)\r\n}","import React from 'react';\r\nimport {NavLink, useLocation} from 'react-router-dom';\r\nimport {routeLinks, routes} from '../../Common/routes';\r\nimport s from './NavBar.module.css'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const url = useLocation()\r\n\r\n    return <div className={s.navBarWrapper}>\r\n\r\n        <div className={url.pathname===routes.mainPage||url.pathname===routes.default? s.links+ \" \" +  s.active:s.links}>\r\n\r\n            <NavLink to={routeLinks.mainPage}>MainPage</NavLink>\r\n\r\n        </div>\r\n        <div className={url.pathname!==routes.mainPage&&url.pathname!==routes.default? s.links+ \" \" +  s.active:s.links}>\r\n\r\n            <NavLink to={routeLinks.defaultPokemon}>Pokemon</NavLink>\r\n\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavBar} from \"../NavBar/NavBar\";\r\n\r\nexport const Header = () => {\r\n    return <div className={s.headerWrapper}>\r\n        <NavBar/>\r\n    </div>\r\n}","import Spin from \"antd/lib/spin\";\r\nimport React from \"react\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize:'25vw'}} spin />;\r\nexport const Preloader = () => {\r\n    return <div style={{\r\n        width: '25vw',\r\n        height: '25vh',\r\n        position:'absolute',\r\n        margin: 'auto',\r\n        left:'0',\r\n        top: '0',\r\n        right: '0',\r\n        bottom: '0'\r\n    }}><Spin indicator={antIcon} /></div>\r\n}","import React from 'react';\r\n\r\ntype Error404PageType = {\r\n    message:string\r\n}\r\n\r\nexport const Error404 = (props:Error404PageType)=>{\r\n    return <div>{props.message ||\" ERROR 404 NOT FOUND\"}</div>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Footer.module.css\"\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const NativeFooter = () => {\r\n    return <div className={s.headerWrapper}>\r\n        <NavLink to='https://pokeapi.co/'>\r\n            <div>PokeAPI.co</div>\r\n        </NavLink>\r\n    </div>\r\n}","import React, {useEffect} from 'react';\nimport 'antd/dist/antd.css'\nimport './App.css';\nimport {MainPage} from './components/MainPage/MainPage';\nimport {Route, Switch} from 'react-router-dom';\nimport {Pokemon} from './components/Pokemon/Pokemon';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppInitialStateType, InitializeApp} from './Redux/AppReducer';\nimport {routes} from './Common/routes';\nimport {Header} from './components/Header/Header';\nimport {AppStateType} from './Redux/Store';\nimport {Preloader} from './Common/Preloader';\nimport {Error404} from './Common/Error404Page';\nimport {NativeFooter} from './components/Footer/Footer';\n\nfunction App() {\n\n    const appProps = useSelector<AppStateType, AppInitialStateType>(state => state.app)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(InitializeApp())\n    }, [dispatch])\n\n    return <div className='app'>\n        <div className=\"headerWrapper\">\n            <Header/>\n        </div>\n        <div className=\"appWrapper\">\n            {!appProps.isInitialise\n                ? <Preloader/>\n                : appProps.Error\n                    ? <Error404 message={appProps.Error}/>\n                    :\n                    <div className='contentWrapper'>\n                        <Switch>\n                            <Route exact path={routes.default}\n                                   render={() => <MainPage/>}/>\n                            <Route exact path={routes.mainPage}\n                                   render={() => <MainPage/>}/>\n                            <Route exact path={routes.pokemon}\n                                   render={() => <Pokemon/>}/>\n                            <Route path={routes.notfound}\n                                   render={() => <div>ERROR 404 NOT FOUND</div>}/>\n                        </Switch>\n                    </div>\n            }\n        </div>\n        <div className='footer'>\n            <NativeFooter/>\n        </div>\n    </div>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware} from 'redux'\r\nimport thunk from \"redux-thunk\";\r\nimport {PokemonsReducers} from \"./PokemonsReducer\";\r\nimport {AppReducer} from \"./AppReducer\";\r\nimport { PokemonReducer } from './PokemonReducer';\r\nimport {CardReducer} from \"./CardReducer\";\r\nimport {SearchReducer} from './SearchReducer';\r\n\r\nconst RootReducer = combineReducers(\r\n    {\r\n        pokemons: PokemonsReducers,\r\n        app:AppReducer,\r\n        pokemon:PokemonReducer,\r\n        card: CardReducer,\r\n        search: SearchReducer\r\n    }\r\n)\r\n\r\nexport type AppStateType = ReturnType<typeof RootReducer>\r\n\r\nexport const AppState = createStore(RootReducer, applyMiddleware(thunk))\r\n\r\n\r\n// @ts-ignore\r\nwindow.AppState = AppState","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {AppState} from \"./Redux/Store\";\nimport { HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n        <HashRouter>\n            <Provider store={AppState}>\n                <App/>\n            </Provider>\n        </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrapper\":\"Pokemon_searchWrapper__3-Fq2\",\"pokemonWrapper\":\"Pokemon_pokemonWrapper__3Gv4r\",\"pokemonContentWrapper\":\"Pokemon_pokemonContentWrapper__Fq2ZH\",\"skillStyleWrapper\":\"Pokemon_skillStyleWrapper__3FKqu\",\"skillStyle\":\"Pokemon_skillStyle__3wqwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarWrapper\":\"NavBar_navBarWrapper__1vzA3\",\"links\":\"NavBar_links__20su3\",\"active\":\"NavBar_active__14dIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"PokemonSearch_listWrapper__1v0s_\",\"inputWrapper\":\"PokemonSearch_inputWrapper__hqUZX\"};"],"sourceRoot":""}